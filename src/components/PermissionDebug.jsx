import React, { useState } from 'react';
import { usePermissions } from '../hooks/usePermissions';

/**
 * Componente para debug de permiss√µes (apenas desenvolvimento)
 * Mostra informa√ß√µes sobre o usu√°rio atual e suas permiss√µes
 */
export default function PermissionDebug() {
  const [isVisible, setIsVisible] = useState(false);
  const {
    user,
    userCargo,
    cargoLabel,
    accessiblePages,
    isAdmin,
    isMedico,
    isRecepcionista,
    isResidente,
    isAcademico,
    canAccessUsers,
    canAccessPatients,
    canAccessForms,
    canAccessConsultas
  } = usePermissions();

  // S√≥ mostrar em desenvolvimento
  if (process.env.NODE_ENV === 'production') {
    return null;
  }

  return (
    <div className="fixed bottom-4 right-4 z-50">
      {/* Bot√£o para toggle */}
      <button
        onClick={() => setIsVisible(!isVisible)}
        className="bg-blue-500 text-white p-2 rounded-full shadow-lg hover:bg-blue-600 transition-colors text-sm"
        title="Debug de Permiss√µes"
      >
        üîê
      </button>

      {/* Panel de debug */}
      {isVisible && (
        <div className="absolute bottom-12 right-0 bg-white border border-gray-300 rounded-lg shadow-xl p-4 w-80 max-h-96 overflow-y-auto">
          <div className="text-sm space-y-2">
            <h3 className="font-bold text-gray-800 border-b pb-1">
              Debug de Permiss√µes
            </h3>

            {/* Informa√ß√µes do usu√°rio */}
            <div>
              <strong>Usu√°rio:</strong> {user?.nome || user?.email || 'N/A'}
            </div>
            <div>
              <strong>Cargo:</strong> {userCargo || 'N√£o definido'} ({cargoLabel})
            </div>

            {/* Verifica√ß√µes de cargo */}
            <div className="border-t pt-2">
              <strong>Tipo de usu√°rio:</strong>
              <ul className="ml-4 text-xs">
                <li>Admin: {isAdmin ? '‚úÖ' : '‚ùå'}</li>
                <li>M√©dico: {isMedico ? '‚úÖ' : '‚ùå'}</li>
                <li>Recepcionista: {isRecepcionista ? '‚úÖ' : '‚ùå'}</li>
                <li>Residente: {isResidente ? '‚úÖ' : '‚ùå'}</li>
                <li>Acad√™mico: {isAcademico ? '‚úÖ' : '‚ùå'}</li>
              </ul>
            </div>

            {/* Permiss√µes por p√°gina */}
            <div className="border-t pt-2">
              <strong>Acesso √†s p√°ginas:</strong>
              <ul className="ml-4 text-xs">
                <li>Usu√°rios: {canAccessUsers ? '‚úÖ' : '‚ùå'}</li>
                <li>Pacientes: {canAccessPatients ? '‚úÖ' : '‚ùå'}</li>
                <li>Formul√°rios: {canAccessForms ? '‚úÖ' : '‚ùå'}</li>
                <li>Consultas: {canAccessConsultas ? '‚úÖ' : '‚ùå'}</li>
              </ul>
            </div>

            {/* P√°ginas acess√≠veis */}
            <div className="border-t pt-2">
              <strong>P√°ginas acess√≠veis:</strong>
              <div className="text-xs">
                {accessiblePages.length > 0
                  ? accessiblePages.join(', ')
                  : 'Nenhuma'
                }
              </div>
            </div>

            {/* Bot√£o para fechar */}
            <button
              onClick={() => setIsVisible(false)}
              className="w-full mt-2 bg-gray-200 text-gray-700 py-1 px-2 rounded text-xs hover:bg-gray-300"
            >
              Fechar
            </button>
          </div>
        </div>
      )}
    </div>
  );
}